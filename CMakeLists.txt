cmake_minimum_required(VERSION 3.10)
project(v8_export C CXX)
set(CMAKE_CXX_STANDARD 14)
if (POLICY CMP0091)
    cmake_policy(SET CMP0091 NEW)
endif (POLICY CMP0091)
###include##########
if (MSVC)
    include_directories(8.4.371.19/include)
    MESSAGE("MSVC")
else ()
    include_directories(9.2-lkgr/include)
endif ()
include_directories(include)
if (CMAKE_HOST_SYSTEM_PROCESSOR MATCHES "arm64")
    if (APPLE)
        link_directories(lib_mac_arm64)
    else ()
        MESSAGE("Not Supported")
    endif ()
else ()
    if (MSVC)
        link_directories(lib_win_x64)
    elseif (APPLE)
        link_directories(lib_mac_x64)
    else ()
        link_directories(lib_linux_x64)
    endif ()
endif ()

add_definitions(-DCOMPILE_EXPORT)
add_definitions(-DV8_COMPRESS_POINTERS -DV8_31BIT_SMIS_ON_64BIT_ARCH)
FILE(GLOB SOURCE_FILES *.cc *.cpp)
FILE(GLOB HEADER_FILES *.h *.hpp)
if (MSVC)
    add_library(v8_export SHARED ${SOURCE_FILES} ${HEADER_FILES})
    set_property(TARGET v8_export PROPERTY
            MSVC_RUNTIME_LIBRARY "MultiThreadedDLL")
    target_link_libraries(v8_export v8.dll.lib v8_libbase.dll.lib v8_libplatform.dll.lib icui18n.dll.lib icuuc.dll.lib zlib.dll.lib boost_system.lib)
else ()
    add_library(v8_export STATIC ${SOURCE_FILES} ${HEADER_FILES})
endif ()


